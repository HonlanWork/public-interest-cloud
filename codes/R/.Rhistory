install.packages(c("ggplot2", "gcookbook"))
library(ggplot2)
library(gcookbook)
?read.table
ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point()
pressure
ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point()
ggplot(pressure, aes(x=temperature, y=pressure)) + geom_line() + geom_point()
table(mtcars$cyl)
BOD
ggplot(BOD, aes(x=Time, y=demand)) + geom_bar(stat="identity")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity")
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar()
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=4)
ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot()
ggplot(ToothGrowth, aes(x=interaction(supp, dose, y=len)) + geom_boxplot()
ggplot(ToothGrowth, aes(x=interaction(supp, dose), y=len)) + geom_boxplot()
ggplot(ToothGrowth, aes(x=interaction(supp, dose), y=len)) + geom_boxplot()
myfun <- function(xvar) {
1 / (1 + exp(-xvar + 10))
}
ggplot(dataframe(x=c(0, 20)), aes(x=x)) + stat_function(fun=myfun, geom="line")
myfun <- function(xvar) {
1 / (1 + exp(-xvar + 10))
}
ggplot(data.frame(x=c(0, 20)), aes(x=x)) + stat_function(fun=myfun, geom="line")
ggplot(BOD, aes(x=Time, y=demand)) + geom_point(stat="identity")
libaray(ggplot2)
library(ggplot2)
ggplot(BOD, aes(x=Time, y=demand)) + geom_point(stat="identity")
ggplot(BOD, aes(x=Time, y=demand)) + geom_bar(stat="identity")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(stat="identity", position="dodge")
cabbage_exp
library(gcookbook)
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(stat="identity", position="dodge")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(stat="identity", position="dodge", color="black") + scale_fill_brewer(palette="Pastel1")
ggplot(diamonds, aes(x=cut)) + geom_bar()
ggplot(diamonds, aes(x=caret)) + geom_bar()
ggplot(diamonds, aes(x=carat)) + geom_bar()
ggplot(diamonds, aes(x=carat)) + geom_bar()
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(stat="identity", position="dodge")
ggplot(cabbage_exp, aes(x=reorder(Date, Weight), y=Weight, fill=Cultivar)) + geom_bar(stat="identity", position="dodge")
ggplot(cabbage_exp, aes(x=reorder(Date, Weight), y=Weight) + geom_bar(stat="identity", position="dodge")
)
ggplot(cabbage_exp, aes(x=reorder(Date, Weight), y=Weight)) + geom_bar(stat="identity", position="dodge")
library(gcookbook)
upc <- subset(uspopchange, rank(Change) > 40)
ggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) + geom_bar(stat="identity")
library(gcookbook)
upc <- subset(uspopchange, rank(Change) > 40)
ggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) + geom_bar(stat="identity") + xlab("State")
library(gcookbook)
csub <- subset(climate, Source="Berkeley" & Year > 1900)
csub$pos <- csub$Anomaly10y >= 0
ggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos)) + geom_bar(stat="identity", position="identity") + scale_fill_manual(guide=FALSE)
csub
csub <- subset(climate, Source="Berkeley" & Year > 1900)
csub$pos <- csub$Anomaly10y >= 0
ggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos)) + geom_bar(stat="identity", position="identity") + scale_fill_manual(guide=FALSE)
csub
library(gcookbook)
csub <- subset(climate, Source=="Berkeley" & Year > 1900)
csub$pos <- csub$Anomaly10y >= 0
csub
ggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos)) + geom_bar(stat="identity", position="identity") + scale_fill_manual(guide=FALSE)
ggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos)) + geom_bar(stat="identity", position="identity")
library(gcookbook)
csub <- subset(climate, Source=="Berkeley" & Year > 1900)
csub$pos <- csub$Anomaly10y >= 0
ggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos)) + geom_bar(stat="identity", position="identity") + scale_fill_manual(values=c("#cceeff", "#ffdddd"), guide=FALSE)
library(gcookbook)
csub <- subset(climate, Source=="Berkeley" & Year > 1900)
csub$pos <- csub$Anomaly10y >= 0
ggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos)) + geom_bar(stat="identity", position="identity") + scale_fill_manual(values=c("#1111ff", "#ff1111"), guide=FALSE)
library(gcookbook)
csub <- subset(climate, Source=="Berkeley" & Year > 1900)
csub$pos <- csub$Anomaly10y >= 0
ggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos)) + geom_bar(stat="identity", position="identity") + scale_fill_manual(values=c("#8888ff", "#ff8888"), guide=FALSE)
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(stat="identity") + guides(fill=guide_legend(reverse=TRUE))
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar, order=desc(Cultivar))) + geom_bar(stat="identity")
library(plyr)
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar, order=desc(Cultivar))) + geom_bar(stat="identity")
library(gcookbook)
library(plyr)
ce <- ddply(cabbage_exp, "Date", transform, percent_weight=Weight / sum(Weight) * 100)
ggplot(ce, aes(x=Date, y=percent_weight, fill=Cultivar)) + geom_bar(stat="identity")
setwd("~/Desktop/git/public-interest-cloud/codes/R")
rm(ce)
rm(csub)
rm(upc)
rm(myfun)
source("loaddata.R")
View(qingyue_water_station)
View(qingyue_water_station_Shandong)
# 地图
map_line <- readShapePoly("maps/bou4/BOUNT_poly.shp")
ShandongJiangsu <- fortify(map_line[substr(as.character(map_line$ADCODE99),1,2) == '37' | substr(as.character(map_line$ADCODE99),1,2) == '32',])
names(ShandongJiangsu)[1:2] <- c("经度", "纬度")
# 空气监测站点分布
ggplot() + geom_polygon(data=ShandongJiangsu, aes(x=经度, y=纬度, group=id), color="grey", fill=NA) + theme_grey() + coord_map() + geom_point(data=qingyue_air_station, aes(x=经度,y=纬度,color=城市,shape=省份)) + labs(title='空气监测站点地理分布') + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
library(ggplot2)
# 地图
map_line <- readShapePoly("maps/bou4/BOUNT_poly.shp")
ShandongJiangsu <- fortify(map_line[substr(as.character(map_line$ADCODE99),1,2) == '37' | substr(as.character(map_line$ADCODE99),1,2) == '32',])
names(ShandongJiangsu)[1:2] <- c("经度", "纬度")
# 空气监测站点分布
ggplot() + geom_polygon(data=ShandongJiangsu, aes(x=经度, y=纬度, group=id), color="grey", fill=NA) + theme_grey() + coord_map() + geom_point(data=qingyue_air_station, aes(x=经度,y=纬度,color=城市,shape=省份)) + labs(title='空气监测站点地理分布') + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
library(ggplot2)
library(gpclib)
library(maptools)
library(mapproj)
# 地图
map_line <- readShapePoly("maps/bou4/BOUNT_poly.shp")
ShandongJiangsu <- fortify(map_line[substr(as.character(map_line$ADCODE99),1,2) == '37' | substr(as.character(map_line$ADCODE99),1,2) == '32',])
names(ShandongJiangsu)[1:2] <- c("经度", "纬度")
# 空气监测站点分布
ggplot() + geom_polygon(data=ShandongJiangsu, aes(x=经度, y=纬度, group=id), color="grey", fill=NA) + theme_grey() + coord_map() + geom_point(data=qingyue_air_station, aes(x=经度,y=纬度,color=城市,shape=省份)) + labs(title='空气监测站点地理分布') + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
library(ggplot2)
library(gpclib)
library(maptools)
library(mapproj)
# 地图
map_line <- readShapePoly("maps/bou4/BOUNT_poly.shp")
China <- fortify(map_line)
names(China)[1:2] <- c("经度", "纬度")
# 水质监测站点分布
ggplot() + geom_polygon(data=China, aes(x=经度, y=纬度, group=id), color="grey", fill=NA) + theme_grey() + coord_map() + geom_point(data=qingyue_water_station, aes(x=经度,y=纬度,color=所属流域)) + labs(title='水质监测站点地理分布') + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
library(ggplot2)
library(gpclib)
library(maptools)
library(mapproj)
# 地图
map_line <- readShapePoly("maps/bou2/bou2_4p.shp")
China <- fortify(map_line)
names(China)[1:2] <- c("经度", "纬度")
# 水质监测站点分布
ggplot() + geom_polygon(data=China, aes(x=经度, y=纬度, group=id), color="grey", fill=NA) + theme_grey() + coord_map() + geom_point(data=qingyue_water_station, aes(x=经度,y=纬度,color=所属流域)) + labs(title='水质监测站点地理分布') + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
summary(China)
summary(qingyue_water_station)
qingyue_water_station <- qingyue_water_station[qingyue_water_station$经度 >=73.45 & qingyue_water_station$经度 <= 135.09 & qingyue_water_station$纬度 >= 6.319 & qingyue_water_station$纬度 <= 53.558, ]
library(ggplot2)
library(gpclib)
library(maptools)
library(mapproj)
# 地图
map_line <- readShapePoly("maps/bou2/bou2_4p.shp")
China <- fortify(map_line)
names(China)[1:2] <- c("经度", "纬度")
# 水质监测站点分布
qingyue_water_station <- qingyue_water_station[qingyue_water_station$经度 >=73.45 & qingyue_water_station$经度 <= 135.09 & qingyue_water_station$纬度 >= 6.319 & qingyue_water_station$纬度 <= 53.558, ]
ggplot() + geom_polygon(data=China, aes(x=经度, y=纬度, group=id), color="grey", fill=NA) + theme_grey() + coord_map() + geom_point(data=qingyue_water_station, aes(x=经度,y=纬度,color=所属流域)) + labs(title='水质监测站点地理分布') + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
library(ggplot2)
library(gpclib)
library(maptools)
library(mapproj)
# 地图
map_line <- readShapePoly("maps/bou4/BOUNT_poly.shp")
Shandong <- fortify(map_line[substr(as.character(map_line$ADCODE99),1,2) == '37',])
names(Shandong)[1:2] <- c("经度", "纬度")
summary(Shandong)
View(qingyue_air_station)
View(qingyue_pollution_company)
qingyue_pollution_company <- qingyue_pollution_company[qingyue_pollution_company$经度 >=114.8 & qingyue_pollution_company$经度 <= 122.7 & qingyue_pollution_company$纬度 >= 34.39 & qingyue_pollution_company$纬度 <= 38.41, ]
View(qingyue_pollution_station)
View(qingyue_pollution_item)
View(qingyue_pollution_data)
View(qingyue_pollution_company)
qingyue_air_station.length
length(qingyue_air_station)
library(ggplot2)
library(gpclib)
library(maptools)
library(mapproj)
# 地图
map_line <- readShapePoly("maps/bou4/BOUNT_poly.shp")
Shandong <- fortify(map_line[substr(as.character(map_line$ADCODE99),1,2) == '37',])
names(Shandong)[1:2] <- c("经度", "纬度")
qingyue_pollution_company <- qingyue_pollution_company[qingyue_pollution_company$经度 >=114.8 & qingyue_pollution_company$经度 <= 122.7 & qingyue_pollution_company$纬度 >= 34.39 & qingyue_pollution_company$纬度 <= 38.41, ]
ggplot() + geom_polygon(data=Shandong, aes(x=经度, y=纬度, group=id), color="grey", fill=NA) + theme_grey() + coord_map() + geom_point(data=qingyue_pollution_company, aes(x=经度,y=纬度,color=市)) + labs(title='污染企业地理分布') + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
source("loaddata.R")
summary(qingyue_pollution_company)
qingyue_pollution_company <- qingyue_pollution_company[qingyue_pollution_company$经度 >=114.8 & qingyue_pollution_company$经度 <= 122.7 & qingyue_pollution_company$纬度 >= 34.39 & qingyue_pollution_company$纬度 <= 38.41, ]
summary(qingyue_pollution_company)
library(ggplot2)
library(gpclib)
library(maptools)
library(mapproj)
# 地图
map_line <- readShapePoly("maps/bou4/BOUNT_poly.shp")
Shandong <- fortify(map_line[substr(as.character(map_line$ADCODE99),1,2) == '37',])
names(Shandong)[1:2] <- c("经度", "纬度")
qingyue_pollution_company <- qingyue_pollution_company[qingyue_pollution_company$经度 >=114.8 & qingyue_pollution_company$经度 <= 122.7 & qingyue_pollution_company$纬度 >= 34.39 & qingyue_pollution_company$纬度 <= 38.41, ]
ggplot() + geom_polygon(data=Shandong, aes(x=经度, y=纬度, group=id), color="grey", fill=NA) + theme_grey() + coord_map() + geom_point(data=qingyue_pollution_company, aes(x=经度,y=纬度,color=市)) + labs(title='污染企业地理分布') + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
summary(qingyue_air_data)
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=AQI, color=站点编码)) + facet_grid(省份~.)
qingyue_air_data <- qingyue_air_data[qingyue_air_data$省份!='',]
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=AQI)) + facet_grid(省份~.)
qingyue_air_data$发布时间 <- as.POSIXct(qingyue_air_data$发布时间, format="%Y-%m-%d %H:%M:%S")
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=AQI)) + facet_grid(省份~.)
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=AQI, color=站点编码)) + facet_grid(省份~.)
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=AQI, color=省份))
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=AQI, color="grey", fill=NA)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=AQI, color="grey")) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=AQI)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
summary(water)
summary(qingyue_water_data)
qingyue_water_data$时间 <- as.POSIXct(qingyue_water_data$时间, format="%Y-%m-%d %H:%M:%S")
ggplot(data=qingyue_water_data) + geom_line(aes(x=时间, y=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_line(aes(x=时间, y=溶解氧)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_line(aes(x=时间, y=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
qingyue_water_data <- qingyue_water_data[qingyue_water_data$PH值!=-1,]
library(ggplot2)
library(gpclib)
library(maptools)
library(mapproj)
# 地图
map_line <- readShapePoly("maps/bou2/bou2_4p.shp")
China <- fortify(map_line)
names(China)[1:2] <- c("经度", "纬度")
# 水质监测站点分布
qingyue_water_station <- qingyue_water_station[qingyue_water_station$经度 >=73.45 & qingyue_water_station$经度 <= 135.09 & qingyue_water_station$纬度 >= 6.319 & qingyue_water_station$纬度 <= 53.558, ]
ggplot() + geom_polygon(data=China, aes(x=经度, y=纬度, group=id), color="grey", fill=NA) + theme_grey() + coord_map() + geom_point(data=qingyue_water_station, aes(x=经度,y=纬度,color=所属流域)) + labs(title='水质监测站点地理分布') + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
qingyue_water_data <- qingyue_water_data[qingyue_water_data$PH值!=-1,]
qingyue_water_data$时间 <- as.POSIXct(qingyue_water_data$时间, format="%Y-%m-%d %H:%M:%S")
ggplot(data=qingyue_water_data) + geom_line(aes(x=时间, y=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
qingyue_water_data <- qingyue_water_data[qingyue_water_data$PH值!=-1,]
qingyue_water_data$时间 <- as.POSIXct(qingyue_water_data$时间, format="%Y-%m-%d %H:%M:%S")
ggplot(data=qingyue_water_data) + geom_line(aes(x=时间, y=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
library(ggplot2)
library(gpclib)
library(maptools)
library(mapproj)
# 地图
map_line <- readShapePoly("maps/bou2/bou2_4p.shp")
China <- fortify(map_line)
names(China)[1:2] <- c("经度", "纬度")
# 水质监测站点分布
qingyue_water_station <- qingyue_water_station[qingyue_water_station$经度 >=73.45 & qingyue_water_station$经度 <= 135.09 & qingyue_water_station$纬度 >= 6.319 & qingyue_water_station$纬度 <= 53.558, ]
ggplot() + geom_polygon(data=China, aes(x=经度, y=纬度, group=id), color="grey", fill=NA) + theme_grey() + coord_map() + geom_point(data=qingyue_water_station, aes(x=经度,y=纬度,color=所属流域)) + labs(title='水质监测站点地理分布') + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
qingyue_water_data <- qingyue_water_data[qingyue_water_data$PH值!=-1,]
qingyue_water_data$时间 <- as.POSIXct(qingyue_water_data$时间, format="%Y-%m-%d %H:%M:%S")
ggplot(data=qingyue_water_data) + geom_line(aes(x=时间, y=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_boxplot(aes(x=站点编号, y=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
qingyue_water_data$站点编号 <- as.numeric(qingyue_water_data$站点编号)
ggplot(data=qingyue_water_data) + geom_boxplot(aes(x=站点编号, y=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
qingyue_water_data$站点编号 <- factor(qingyue_water_data$站点编号)
ggplot(data=qingyue_water_data) + geom_boxplot(aes(x=站点编号, y=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=AQI)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=SO2)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=NO2)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=CO)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=O3)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=PM10)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=PM2.5)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=AQI)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_boxplot(aes(x=站点编号, y=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_line(aes(x=时间, y=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_line(aes(x=时间, y=溶解氧)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_line(aes(x=时间, y=氨氮)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
summary(qingyue_water_data)
ggplot(data=qingyue_water_data) + geom_line(aes(x=时间, y=高锰酸盐)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_boxplot(aes(x=站点编号, y=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_boxplot(aes(x=站点编号, y=溶解氧)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_boxplot(aes(x=站点编号, y=氨氮)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_boxplot(aes(x=站点编号, y=高锰酸盐)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_boxplot(aes(x=站点编号, y=总有机碳)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
qingyue_water_data <- qingyue_water_data[qingyue_water_data$PH值>=0 & qingyue_water_data$溶解氧>=0 & qingyue_water_data$氨氮>=0 & qingyue_water_data$高锰酸盐>=0 & qingyue_water_data$总有机碳>=0,]
ggplot(data=qingyue_water_data) + geom_boxplot(aes(x=站点编号, y=总有机碳)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
summary(qingyue_water_station)
qingyue_water_station <- qingyue_water_station[qingyue_water_station$经度 >=73.45 & qingyue_water_station$经度 <= 135.09 & qingyue_water_station$纬度 >= 6.319 & qingyue_water_station$纬度 <= 53.558, ]
ggplot() + geom_polygon(data=China, aes(x=经度, y=纬度, group=id), color="grey", fill=NA) + theme_grey() + coord_map() + geom_point(data=qingyue_water_station, aes(x=经度,y=纬度,color=所属流域)) + labs(title='水质监测站点地理分布') + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
qingyue_water_data <- qingyue_water_data[qingyue_water_data$PH值>=0 & qingyue_water_data$溶解氧>=0 & qingyue_water_data$氨氮>=0 & qingyue_water_data$高锰酸盐>=0 & qingyue_water_data$总有机碳>=0,]
summary(qingyue_water_data)
ggplot(data=qingyue_air_data) + geom_line(aes(x=发布时间, y=AQI)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_hist(aes(x=AQI)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_histogram(aes(x=AQI)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_density(aes(x=AQI)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_density(aes(x=发布时间, y=AQI)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data, aes(x=发布时间, y=AQI) + stat_density2d(aes(fill = ..level..), geom="polygon") + scale_fill_continuous(high='darkblue',low='white')  + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
p <- ggplot(data=qingyue_air_data, aes(x=发布时间, y=AQI) + stat_density2d(aes(fill = ..level..), geom="polygon") + scale_fill_continuous(high='darkblue',low='white')  + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
p <- ggplot(data=qingyue_air_data, aes(x=发布时间, y=AQI) + stat_density2d(aes(fill = ..level..), geom="polygon") + scale_fill_continuous(high='darkblue',low='white')  + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data, aes(x=发布时间, y=AQI)) + stat_density2d(aes(fill = ..level..), geom="polygon") + scale_fill_continuous(high='darkblue',low='white')  + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data, aes(x=发布时间, y=AQI)) + stat_density2d(aes(fill = ..level..), geom="polygon") + scale_fill_continuous(high='darkblue',low='white')  + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data, aes(x=发布时间, y=AQI)) + stat_density2d(aes(fill = ..level..)) + scale_fill_continuous(high='darkblue',low='white')  + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data, aes(x=发布时间, y=AQI)) + stat_density2d(aes(fill = ..level..), geom="polygon") + scale_fill_continuous(high='darkblue',low='white')  + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data) + geom_density(aes(x=AQI)) + theme_grey() + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_boxplot(aes(x=站点编号, y=总有机碳)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_boxplot(aes(x=站点编号, y=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_density(aes(x=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_density(aes(x=PH值)) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data) + geom_density(aes(x=PH值)) + theme_grey() + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_air_data, aes(x=发布时间, y=AQI)) + stat_density2d(aes(fill = ..level..), geom="polygon") + scale_fill_continuous(high='darkblue',low='white')  + facet_grid(省份~.) + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
ggplot(data=qingyue_water_data, aes(x=时间, y=PH值)) + stat_density2d(aes(fill = ..level..), geom="polygon") + scale_fill_continuous(high='darkblue',low='white') + theme(text=element_text(family="Microsoft YaHei"), legend.title=element_blank())
summary(China)
